import QualysClient, {
  buildPaginatedResponse,
  QualysClientResponseType,
} from '../QualysClient';
import { ParsedUrlQueryInput } from 'querystring';
import { ListHostDetectionsReply } from './types.listHostDetections';

export class QualysVmClient {
  constructor(private qualysClient: QualysClient) {}

  listHostDetections(options: {
    /**
     * severity range (e.g. "1-5")
     */
    severities?: string;

    /**
     * Include detailed results?
     */
    show_results: 0 | 1;

    /**
     * If you show_igs (Information); then you will get more than vulns
     * you will get information.
     */
    show_igs: 0 | 1;

    /**
     * truncation limit (e.g. 10)
     */
    truncation_limit?: number;
  }) {
    const query: ParsedUrlQueryInput = {
      action: 'list',
      show_results: options.show_results,
      show_igs: options.show_results,
      truncation_limit: options.truncation_limit,
    };

    if (options.severities) {
      query.severities = options.severities;
    }

    return buildPaginatedResponse<ListHostDetectionsReply>(this.qualysClient, {
      requestOptions: {
        requestName: 'vulnerabilityManagement.listHostDetections',
        url: this.qualysClient.buildRequestUrl({
          path: '/api/2.0/fo/asset/host/vm/detection/',
          query,
        }),
        method: 'get',
        responseType: QualysClientResponseType.XML,
      },
      buildNextRequest(result) {
        // const responseData: any = result.responseData;
        const nextUrl =
          result.responseData?.HOST_LIST_VM_DETECTION_OUTPUT?.RESPONSE?.WARNING
            ?.URL;
        return nextUrl
          ? {
              url: nextUrl,
            }
          : null;
      },
    });
  }
}
