import { PossibleArray, ISODateString } from '../../types';

export interface ListHostDetectionsReply {
  HOST_LIST_VM_DETECTION_OUTPUT?: HostListVMDetectionOutput;
}

export interface HostListVMDetectionOutput {
  RESPONSE?: Response;
}

export interface Response {
  DATETIME?: ISODateString;
  HOST_LIST?: HostList;
  WARNING?: {
    URL?: string;
  };
}

export interface HostList {
  HOST?: PossibleArray<Host>;
}

export interface Host {
  ID?: number;
  IP?: string;
  TRACKING_METHOD?: string;
  OS?: string;
  DNS?: string;
  LAST_SCAN_DATETIME?: ISODateString;
  LAST_VM_SCANNED_DATE?: ISODateString;
  LAST_VM_SCANNED_DURATION?: number;
  DETECTION_LIST?: DetectionList;
  NETBIOS?: string;
  QG_HOSTID?: string;
  LAST_VM_AUTH_SCANNED_DATE?: ISODateString;
  LAST_PC_SCANNED_DATE?: ISODateString;
}

export interface DetectionList {
  DETECTION?: PossibleArray<Detection>;
}

export interface Detection {
  QID?: number;
  TYPE?: Type;
  SEVERITY?: number;
  RESULTS?: string;
  FIRST_FOUND_DATETIME?: ISODateString;
  LAST_FOUND_DATETIME?: ISODateString;
  TIMES_FOUND?: number;
  IS_DISABLED?: number;
  LAST_PROCESSED_DATETIME?: ISODateString;
  PORT?: number;
  PROTOCOL?: Protocol;
  SSL?: number;
  STATUS?: Status;
  LAST_TEST_DATETIME?: ISODateString;
  LAST_UPDATE_DATETIME?: ISODateString;
  IS_IGNORED?: number;
}

export type Protocol = 'tcp' | string;
export type Status = 'Active' | 'New' | string;
export type Type = 'Confirmed' | 'Info' | string;
